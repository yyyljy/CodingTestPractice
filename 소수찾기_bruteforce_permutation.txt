import java.util.ArrayList;
import java.util.Arrays;
class Solution {
    static ArrayList<Integer> list = new ArrayList<Integer>();
    public int solution(String numbers) {
        int answer = 0;
	    String[] strArr = numbers.split("");
	    int length = strArr.length;
	    int[] arr = new int[length];
	    for(int i=0;i<length;i++) {
	    	arr[i] = Integer.parseInt(strArr[i]); 
	    }
	    Arrays.sort(arr);
	    int[] output = new int[length];
        boolean[] visited = new boolean[length];
        for(int i=1;i<=length;i++) {
            perm(arr, output, visited, 0, length, i);
        }
        for(int tmp:list) {
        	if(tmp>1) {
        		answer += primeCheck(tmp);
        	}
        }
        return answer;
    }
    static void perm(int[] arr, int[] output, boolean[] visited, int depth, int n, int r) {
        if (depth == r) {
            print(output, r);
            return;
        }

        for (int i = 0; i < n; i++) {
            if (visited[i] != true) {
                visited[i] = true;
                output[depth] = arr[i];
                perm(arr, output, visited, depth + 1, n, r);
                visited[i] = false;
                ;
            }
        }
    }
    static void print(int[] arr, int r) {
    	String str = "";
        for (int i = 0; i < r; i++) {
            str += Integer.toString(arr[i]); 
        }
        if(!list.contains(Integer.parseInt(str))) {
        	list.add(Integer.parseInt(str));
        }
    }
    public static int primeCheck(int num) {
    	for(int i = 2; i <= Math.sqrt(num); i++) { 
            if (num%i == 0)
                return 0;
        }
    	return 1;
    }
}